/**
 * File generated by the ThingML IDE
 * /!\Do not edit this file/!\
 * In case of a bug in the generated code,
 * please submit an issue on our GitHub
 **/

package org.thingml.generated;

import no.sintef.jasm.*;
import no.sintef.jasm.ext.*;

import org.thingml.generated.api.*;
import org.thingml.generated.messages.*;

import java.util.*;

//START: @java_import annotation
import java.time.LocalTime;

//END: @java_import annotation

/**
 * Definition for type : EnergySaving
 **/
public class EnergySaving extends Component implements IEnergySaving_energy_timer, IEnergySaving_get_day_night_time, IEnergySaving_get_luminance, IEnergySaving_human_input_temp {

private boolean debug = false;
public boolean isDebug() {return debug;}
public void setDebug(boolean debug) {this.debug = debug;}
public String toString() {
String result = "instance " + getName() + "\n";
result += "\tnight_start = " + TimeStuff_night_start_var;
result += "\tnight_end = " + TimeStuff_night_end_var;
result += "\tcurrent_comfort_temp = " + EnergySaving_current_comfort_temp_var;
result += "\tcurrent_luminance = " + EnergySaving_current_luminance_var;
result += "\tlight_threshold = " + EnergySaving_light_threshold_var;
result += "\tlight_off_temp_fall = " + EnergySaving_light_off_temp_fall_var;
result += "\tnight_temp_fall = " + EnergySaving_night_temp_fall_var;
result += "";
return result;
}

public synchronized void luminance_via_get_luminance(int LuminanceMsg_luminance_id_var, double LuminanceMsg_luminance_lum_var){
final Event _msg = luminanceType.instantiate(LuminanceMsg_luminance_id_var, LuminanceMsg_luminance_lum_var);
_msg.setPort(get_luminance_port);
receive(_msg);
}

public synchronized void set_temperature_via_human_input_temp(double TemperatureMsg_set_temperature_t_var){
final Event _msg = set_temperatureType.instantiate(TemperatureMsg_set_temperature_t_var);
_msg.setPort(human_input_temp_port);
receive(_msg);
}

public synchronized void set_day_start_via_get_day_night_time(int LuminanceMsg_set_day_start_time_var){
final Event _msg = set_day_startType.instantiate(LuminanceMsg_set_day_start_time_var);
_msg.setPort(get_day_night_time_port);
receive(_msg);
}

public synchronized void set_night_start_via_get_day_night_time(int LuminanceMsg_set_night_start_time_var){
final Event _msg = set_night_startType.instantiate(LuminanceMsg_set_night_start_time_var);
_msg.setPort(get_day_night_time_port);
receive(_msg);
}

public synchronized void timer_timeout_via_energy_timer(){
final Event _msg = timer_timeoutType.instantiate();
_msg.setPort(energy_timer_port);
receive(_msg);
}

private void sendSet_temperature_via_send_comfort_temp(double TemperatureMsg_set_temperature_t_var){
send_comfort_temp_port.send(set_temperatureType.instantiate(TemperatureMsg_set_temperature_t_var));
}

private void sendTimer_start_via_energy_timer(int TimerMsgs_timer_start_delay_var){
energy_timer_port.send(timer_startType.instantiate(TimerMsgs_timer_start_delay_var));
}

private void sendTimer_cancel_via_energy_timer(){
energy_timer_port.send(timer_cancelType.instantiate());
}

private void sendAdd_lightsensor_via_request_luminance_sensor(int LuminanceMsg_add_lightsensor_id_var){
request_luminance_sensor_port.send(add_lightsensorType.instantiate(LuminanceMsg_add_lightsensor_id_var));
}

//Attributes
private long TimeStuff_night_start_var;
private double EnergySaving_current_luminance_var;
private double EnergySaving_light_off_temp_fall_var;
private double EnergySaving_current_comfort_temp_var;
private double EnergySaving_light_threshold_var;
private double EnergySaving_night_temp_fall_var;
private long TimeStuff_night_end_var;
//Ports
private Port get_luminance_port;
private Port human_input_temp_port;
private Port get_day_night_time_port;
private Port send_comfort_temp_port;
private Port energy_timer_port;
private Port request_luminance_sensor_port;
//Message types
protected final LuminanceMessageType luminanceType = new LuminanceMessageType();
protected final Add_lightsensorMessageType add_lightsensorType = new Add_lightsensorMessageType();
protected final Set_luminanceMessageType set_luminanceType = new Set_luminanceMessageType();
protected final Set_day_startMessageType set_day_startType = new Set_day_startMessageType();
protected final Set_night_startMessageType set_night_startType = new Set_night_startMessageType();
protected final TemperatureMessageType temperatureType = new TemperatureMessageType();
protected final Add_thermometerMessageType add_thermometerType = new Add_thermometerMessageType();
protected final Set_temperatureMessageType set_temperatureType = new Set_temperatureMessageType();
protected final Set_deltaMessageType set_deltaType = new Set_deltaMessageType();
protected final Fetch_tempMessageType fetch_tempType = new Fetch_tempMessageType();
protected final Timer_startMessageType timer_startType = new Timer_startMessageType();
protected final Timer_cancelMessageType timer_cancelType = new Timer_cancelMessageType();
protected final Timer_timeoutMessageType timer_timeoutType = new Timer_timeoutMessageType();
//Empty Constructor
public EnergySaving() {
super();
}

//Getters and Setters for non readonly/final attributes
public long getTimeStuff_night_start_var() {
return TimeStuff_night_start_var;
}

public void setTimeStuff_night_start_var(long TimeStuff_night_start_var) {
this.TimeStuff_night_start_var = TimeStuff_night_start_var;
}

public EnergySaving initTimeStuff_night_start_var(long TimeStuff_night_start_var) {
this.TimeStuff_night_start_var = TimeStuff_night_start_var;
return this;
}

public double getEnergySaving_current_luminance_var() {
return EnergySaving_current_luminance_var;
}

public void setEnergySaving_current_luminance_var(double EnergySaving_current_luminance_var) {
this.EnergySaving_current_luminance_var = EnergySaving_current_luminance_var;
}

public EnergySaving initEnergySaving_current_luminance_var(double EnergySaving_current_luminance_var) {
this.EnergySaving_current_luminance_var = EnergySaving_current_luminance_var;
return this;
}

public double getEnergySaving_light_off_temp_fall_var() {
return EnergySaving_light_off_temp_fall_var;
}

public void setEnergySaving_light_off_temp_fall_var(double EnergySaving_light_off_temp_fall_var) {
this.EnergySaving_light_off_temp_fall_var = EnergySaving_light_off_temp_fall_var;
}

public EnergySaving initEnergySaving_light_off_temp_fall_var(double EnergySaving_light_off_temp_fall_var) {
this.EnergySaving_light_off_temp_fall_var = EnergySaving_light_off_temp_fall_var;
return this;
}

public double getEnergySaving_current_comfort_temp_var() {
return EnergySaving_current_comfort_temp_var;
}

public void setEnergySaving_current_comfort_temp_var(double EnergySaving_current_comfort_temp_var) {
this.EnergySaving_current_comfort_temp_var = EnergySaving_current_comfort_temp_var;
}

public EnergySaving initEnergySaving_current_comfort_temp_var(double EnergySaving_current_comfort_temp_var) {
this.EnergySaving_current_comfort_temp_var = EnergySaving_current_comfort_temp_var;
return this;
}

public double getEnergySaving_light_threshold_var() {
return EnergySaving_light_threshold_var;
}

public void setEnergySaving_light_threshold_var(double EnergySaving_light_threshold_var) {
this.EnergySaving_light_threshold_var = EnergySaving_light_threshold_var;
}

public EnergySaving initEnergySaving_light_threshold_var(double EnergySaving_light_threshold_var) {
this.EnergySaving_light_threshold_var = EnergySaving_light_threshold_var;
return this;
}

public double getEnergySaving_night_temp_fall_var() {
return EnergySaving_night_temp_fall_var;
}

public void setEnergySaving_night_temp_fall_var(double EnergySaving_night_temp_fall_var) {
this.EnergySaving_night_temp_fall_var = EnergySaving_night_temp_fall_var;
}

public EnergySaving initEnergySaving_night_temp_fall_var(double EnergySaving_night_temp_fall_var) {
this.EnergySaving_night_temp_fall_var = EnergySaving_night_temp_fall_var;
return this;
}

public long getTimeStuff_night_end_var() {
return TimeStuff_night_end_var;
}

public void setTimeStuff_night_end_var(long TimeStuff_night_end_var) {
this.TimeStuff_night_end_var = TimeStuff_night_end_var;
}

public EnergySaving initTimeStuff_night_end_var(long TimeStuff_night_end_var) {
this.TimeStuff_night_end_var = TimeStuff_night_end_var;
return this;
}

//Getters for Ports
public Port getGet_luminance_port() {
return get_luminance_port;
}
public Port getHuman_input_temp_port() {
return human_input_temp_port;
}
public Port getGet_day_night_time_port() {
return get_day_night_time_port;
}
public Port getSend_comfort_temp_port() {
return send_comfort_temp_port;
}
public Port getEnergy_timer_port() {
return energy_timer_port;
}
public Port getRequest_luminance_sensor_port() {
return request_luminance_sensor_port;
}
private CompositeState buildEnergySaving_EnergySaving(){
final AtomicState state_EnergySaving_EnergySaving_Normal = new AtomicState("Normal");
state_EnergySaving_EnergySaving_Normal.onEntry(()->{
System.out.println(""+((" I am in normal state ")));
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var()));
});
final AtomicState state_EnergySaving_EnergySaving_LightOff = new AtomicState("LightOff");
state_EnergySaving_EnergySaving_LightOff.onEntry(()->{
System.out.println(""+((" I am in LightOff state ")));
sendTimer_start_via_energy_timer((int) (LeftOfDay()));
});
state_EnergySaving_EnergySaving_LightOff.onExit(()->{
sendTimer_cancel_via_energy_timer();
});

final AtomicState state_EnergySaving_EnergySaving_Night = new AtomicState("Night");
state_EnergySaving_EnergySaving_Night.onEntry(()->{
System.out.println(""+((" I am in night state ")));
sendTimer_start_via_energy_timer((int) (LeftOfNight()));
});
state_EnergySaving_EnergySaving_Night.onExit(()->{
sendTimer_cancel_via_energy_timer();
});

Transition h878796532 = new Transition();
h878796532.from(state_EnergySaving_EnergySaving_Normal).to(state_EnergySaving_EnergySaving_Normal);
h878796532.event(set_temperatureType);
h878796532.port(human_input_temp_port);
h878796532.action((Event e)->{
final Set_temperatureMessageType.Set_temperatureMessage set_temperature = (Set_temperatureMessageType.Set_temperatureMessage) e;
EnergySaving_current_comfort_temp_var = (double) (set_temperature.t);
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var()));
});

Transition h627185334 = new Transition();
h627185334.from(state_EnergySaving_EnergySaving_Normal).to(state_EnergySaving_EnergySaving_LightOff);
h627185334.event(luminanceType);
h627185334.guard((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
return luminance.lum < getEnergySaving_light_threshold_var() && (Night((long) (Now())) == false);
});

h627185334.port(get_luminance_port);
h627185334.action((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
EnergySaving_current_luminance_var = (double) (luminance.lum);
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_light_off_temp_fall_var()));
});

Transition h1582048929 = new Transition();
h1582048929.from(state_EnergySaving_EnergySaving_Normal).to(state_EnergySaving_EnergySaving_Night);
h1582048929.event(luminanceType);
h1582048929.guard((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
return luminance.lum < getEnergySaving_light_threshold_var() && (Night((long) (Now())) == true);
});

h1582048929.port(get_luminance_port);
h1582048929.action((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
EnergySaving_current_luminance_var = (double) (luminance.lum);
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_night_temp_fall_var()));
});

Transition h149233400 = new Transition();
h149233400.from(state_EnergySaving_EnergySaving_Normal).to(state_EnergySaving_EnergySaving_LightOff);
h149233400.event(set_night_startType);
h149233400.guard((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightStart((long) (Now()), (long) (set_night_start.time)) == false);
});

h149233400.port(get_day_night_time_port);
h149233400.action((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_light_off_temp_fall_var()));
});

Transition h327089356 = new Transition();
h327089356.from(state_EnergySaving_EnergySaving_Normal).to(state_EnergySaving_EnergySaving_Night);
h327089356.event(set_night_startType);
h327089356.guard((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightStart((long) (Now()), (long) (set_night_start.time)) == true);
});

h327089356.port(get_day_night_time_port);
h327089356.action((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_night_temp_fall_var()));
});

Transition h364384479 = new Transition();
h364384479.from(state_EnergySaving_EnergySaving_Normal).to(state_EnergySaving_EnergySaving_Normal);
h364384479.event(set_day_startType);
h364384479.guard((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
return getEnergySaving_current_luminance_var() >= getEnergySaving_light_threshold_var();
});

h364384479.port(get_day_night_time_port);
h364384479.action((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
TimeStuff_night_end_var = (long) (set_day_start.time);
});

Transition h410969626 = new Transition();
h410969626.from(state_EnergySaving_EnergySaving_Normal).to(state_EnergySaving_EnergySaving_Normal);
h410969626.event(set_night_startType);
h410969626.guard((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
return getEnergySaving_current_luminance_var() >= getEnergySaving_light_threshold_var();
});

h410969626.port(get_day_night_time_port);
h410969626.action((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
TimeStuff_night_start_var = (long) (set_night_start.time);
});

Transition h1752831671 = new Transition();
h1752831671.from(state_EnergySaving_EnergySaving_LightOff).to(state_EnergySaving_EnergySaving_Night);
h1752831671.event(timer_timeoutType);
h1752831671.port(energy_timer_port);
h1752831671.action((Event e)->{
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_night_temp_fall_var()));
});

Transition h844549466 = new Transition();
h844549466.from(state_EnergySaving_EnergySaving_LightOff).to(state_EnergySaving_EnergySaving_Normal);
h844549466.event(luminanceType);
h844549466.guard((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
return luminance.lum >= getEnergySaving_light_threshold_var();
});

h844549466.port(get_luminance_port);
h844549466.action((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
EnergySaving_current_luminance_var = (double) (luminance.lum);
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var()));
});

Transition h1835936469 = new Transition();
h1835936469.from(state_EnergySaving_EnergySaving_LightOff).to(state_EnergySaving_EnergySaving_LightOff);
h1835936469.event(set_temperatureType);
h1835936469.port(human_input_temp_port);
h1835936469.action((Event e)->{
final Set_temperatureMessageType.Set_temperatureMessage set_temperature = (Set_temperatureMessageType.Set_temperatureMessage) e;
sendSet_temperature_via_send_comfort_temp((double) (set_temperature.t - getEnergySaving_light_off_temp_fall_var()));
});

Transition h492773285 = new Transition();
h492773285.from(state_EnergySaving_EnergySaving_LightOff).to(state_EnergySaving_EnergySaving_Night);
h492773285.event(set_night_startType);
h492773285.guard((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
return (UpdateNightStart((long) (Now()), (long) (set_night_start.time)) == true) && getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var();
});

h492773285.port(get_day_night_time_port);
h492773285.action((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_night_temp_fall_var()));
});

Transition h1695408090 = new Transition();
h1695408090.from(state_EnergySaving_EnergySaving_LightOff).to(state_EnergySaving_EnergySaving_Night);
h1695408090.event(set_day_startType);
h1695408090.guard((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightEnd((long) (Now()), (long) (set_day_start.time)) == true);
});

h1695408090.port(get_day_night_time_port);
h1695408090.action((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_light_off_temp_fall_var()));
});

Transition h1239189570 = new Transition();
h1239189570.from(state_EnergySaving_EnergySaving_LightOff).to(state_EnergySaving_EnergySaving_LightOff);
h1239189570.event(set_night_startType);
h1239189570.guard((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightStart((long) (Now()), (long) (set_night_start.time)) == false);
});

h1239189570.port(get_day_night_time_port);
Transition h485423874 = new Transition();
h485423874.from(state_EnergySaving_EnergySaving_LightOff).to(state_EnergySaving_EnergySaving_LightOff);
h485423874.event(set_day_startType);
h485423874.guard((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightEnd((long) (Now()), (long) (set_day_start.time)) == false);
});

h485423874.port(get_day_night_time_port);
Transition h1890108014 = new Transition();
h1890108014.from(state_EnergySaving_EnergySaving_Night).to(state_EnergySaving_EnergySaving_LightOff);
h1890108014.event(timer_timeoutType);
h1890108014.port(energy_timer_port);
h1890108014.action((Event e)->{
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_light_off_temp_fall_var()));
});

Transition h1429213609 = new Transition();
h1429213609.from(state_EnergySaving_EnergySaving_Night).to(state_EnergySaving_EnergySaving_Normal);
h1429213609.event(luminanceType);
h1429213609.guard((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
return luminance.lum >= getEnergySaving_light_threshold_var();
});

h1429213609.port(get_luminance_port);
h1429213609.action((Event e)->{
final LuminanceMessageType.LuminanceMessage luminance = (LuminanceMessageType.LuminanceMessage) e;
EnergySaving_current_luminance_var = (double) (luminance.lum);
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var()));
});

Transition h1874718325 = new Transition();
h1874718325.from(state_EnergySaving_EnergySaving_Night).to(state_EnergySaving_EnergySaving_Night);
h1874718325.event(set_temperatureType);
h1874718325.port(human_input_temp_port);
h1874718325.action((Event e)->{
final Set_temperatureMessageType.Set_temperatureMessage set_temperature = (Set_temperatureMessageType.Set_temperatureMessage) e;
EnergySaving_current_comfort_temp_var = (double) (set_temperature.t - getEnergySaving_night_temp_fall_var());
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var()));
});

Transition h1859755232 = new Transition();
h1859755232.from(state_EnergySaving_EnergySaving_Night).to(state_EnergySaving_EnergySaving_LightOff);
h1859755232.event(set_night_startType);
h1859755232.guard((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightStart((long) (Now()), (long) (set_night_start.time)) == false);
});

h1859755232.port(get_day_night_time_port);
h1859755232.action((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_light_off_temp_fall_var()));
});

Transition h1599779245 = new Transition();
h1599779245.from(state_EnergySaving_EnergySaving_Night).to(state_EnergySaving_EnergySaving_LightOff);
h1599779245.event(set_day_startType);
h1599779245.guard((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightEnd((long) (Now()), (long) (set_day_start.time)) == false);
});

h1599779245.port(get_day_night_time_port);
h1599779245.action((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
sendSet_temperature_via_send_comfort_temp((double) (getEnergySaving_current_comfort_temp_var() - getEnergySaving_light_off_temp_fall_var()));
});

Transition h1711234567 = new Transition();
h1711234567.from(state_EnergySaving_EnergySaving_Night).to(state_EnergySaving_EnergySaving_Night);
h1711234567.event(set_night_startType);
h1711234567.guard((Event e)->{
final Set_night_startMessageType.Set_night_startMessage set_night_start = (Set_night_startMessageType.Set_night_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightStart((long) (Now()), (long) (set_night_start.time)) == true);
});

h1711234567.port(get_day_night_time_port);
Transition h759666442 = new Transition();
h759666442.from(state_EnergySaving_EnergySaving_Night).to(state_EnergySaving_EnergySaving_Night);
h759666442.event(set_day_startType);
h759666442.guard((Event e)->{
final Set_day_startMessageType.Set_day_startMessage set_day_start = (Set_day_startMessageType.Set_day_startMessage) e;
return getEnergySaving_current_luminance_var() < getEnergySaving_light_threshold_var() && (UpdateNightEnd((long) (Now()), (long) (set_day_start.time)) == true);
});

h759666442.port(get_day_night_time_port);
final CompositeState state_EnergySaving_EnergySaving = new CompositeState("EnergySaving");
state_EnergySaving_EnergySaving.onEntry(()->{
sendAdd_lightsensor_via_request_luminance_sensor((int) (1));
});
state_EnergySaving_EnergySaving.add(state_EnergySaving_EnergySaving_Normal);
state_EnergySaving_EnergySaving.add(state_EnergySaving_EnergySaving_LightOff);
state_EnergySaving_EnergySaving.add(state_EnergySaving_EnergySaving_Night);
state_EnergySaving_EnergySaving.initial(state_EnergySaving_EnergySaving_Normal);
return state_EnergySaving_EnergySaving;
}

public Component buildBehavior(String session, Component root) {
if (root == null) {
//Init ports
get_luminance_port = new Port("get_luminance", this);
human_input_temp_port = new Port("human_input_temp", this);
get_day_night_time_port = new Port("get_day_night_time", this);
send_comfort_temp_port = new Port("send_comfort_temp", this);
energy_timer_port = new Port("energy_timer", this);
request_luminance_sensor_port = new Port("request_luminance_sensor", this);
} else {
get_luminance_port = ((EnergySaving)root).get_luminance_port;
human_input_temp_port = ((EnergySaving)root).human_input_temp_port;
get_day_night_time_port = ((EnergySaving)root).get_day_night_time_port;
send_comfort_temp_port = ((EnergySaving)root).send_comfort_temp_port;
energy_timer_port = ((EnergySaving)root).energy_timer_port;
request_luminance_sensor_port = ((EnergySaving)root).request_luminance_sensor_port;
}
if (session == null){
//Init state machine
behavior = buildEnergySaving_EnergySaving();
}
return this;
}

 long Now() {
long timeval_var = 0;
timeval_var = (long) (LocalTime.now().toNanoOfDay()/1000000);
return (long) (timeval_var);
}
 long Timestamp(final int TimeStuff_Timestamp_h_var, final int TimeStuff_Timestamp_m_var, final int TimeStuff_Timestamp_s_var) {
return (long) ((TimeStuff_Timestamp_s_var + TimeStuff_Timestamp_m_var * 60 + TimeStuff_Timestamp_h_var * 60 * 60) * 1000);
}
 long LeftOfDay() {
long n_var = (long) (Now());

long left_var = (long) (getTimeStuff_night_start_var() - n_var);

if(left_var < 0) {
left_var = (long) (left_var + 24 * 60 * 60 * 1000);

}
if( !(Night((long) (n_var)))) {
return (long) (left_var);

} else {
return (long) (0);

}
}
 long LeftOfNight() {
long n_var = (long) (Now());

long left_var = (long) (getTimeStuff_night_end_var() - n_var);

if(left_var < 0) {
left_var = (long) (left_var + 24 * 60 * 60 * 1000);

}
if(Night((long) (n_var))) {
return (long) (left_var);

} else {
return (long) (0);

}
}
 boolean Night(final long TimeStuff_Night_x_var) {
if(getTimeStuff_night_end_var() < getTimeStuff_night_start_var()) {
if(getTimeStuff_night_start_var() <= TimeStuff_Night_x_var || TimeStuff_Night_x_var < getTimeStuff_night_end_var()) {
return (boolean) (true);

} else {
return (boolean) (false);

}

} else {
if(getTimeStuff_night_start_var() <= TimeStuff_Night_x_var && TimeStuff_Night_x_var < getTimeStuff_night_end_var()) {
return (boolean) (true);

} else {
return (boolean) (false);

}

}
}
 boolean UpdateNightStart(final long TimeStuff_UpdateNightStart_x_var, final long TimeStuff_UpdateNightStart_new_night_start_var) {
System.out.println(""+((" Old night start: ")));
System.out.println(""+((getTimeStuff_night_start_var())));
TimeStuff_night_start_var = (long) (TimeStuff_UpdateNightStart_new_night_start_var);
System.out.println(""+((" New night start: ")));
System.out.println(""+((getTimeStuff_night_start_var())));
boolean isNight_var = (boolean) (Night((long) (TimeStuff_UpdateNightStart_x_var)));

System.out.println(""+((isNight_var)));
return (boolean) (isNight_var);
}
 boolean UpdateNightEnd(final long TimeStuff_UpdateNightEnd_x_var, final long TimeStuff_UpdateNightEnd_new_night_end_var) {
System.out.println(""+((" Old night_end: ")));
System.out.println(""+((getTimeStuff_night_start_var())));
TimeStuff_night_end_var = (long) (TimeStuff_UpdateNightEnd_new_night_end_var);
System.out.println(""+((" New night_end: ")));
System.out.println(""+((getTimeStuff_night_start_var())));
boolean isNight_var = (boolean) (Night((long) (TimeStuff_UpdateNightEnd_x_var)));

System.out.println(""+((isNight_var)));
return (boolean) (isNight_var);
}
}
